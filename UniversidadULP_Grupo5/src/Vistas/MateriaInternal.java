/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import static java.util.Collections.list;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import manipuladoresDAO.MateriaDAO;
import universidadulp_grupo5.Materia;

/**
 *
 * @author Claudia Bonisoni
 */
public class MateriaInternal extends javax.swing.JInternalFrame {

    /**
     * Creates new form MateriaInternal
     */
    private MateriaDAO maniMateria = new MateriaDAO();
    private DefaultTableModel modelo= new DefaultTableModel();
    int seleccionado = -1;
    
    public MateriaInternal() {
        initComponents();
        armarCabecera();
        rellenarTabla(tblMateria);
        limpiarCampos();
        
        btnModificar.setEnabled(false);
        //agregarListeneraTabla(tblMateria);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblMateria = new javax.swing.JLabel();
        txtMateria = new javax.swing.JTextField();
        cbHabilitar = new javax.swing.JCheckBox();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtCodMateria = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnDarAlta = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMateria = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        Labelnombre = new javax.swing.JLabel();
        LabelDescripcion = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(47, 96, 131));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));

        lblMateria.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblMateria.setForeground(new java.awt.Color(255, 255, 255));
        lblMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMateria.setText("Gestión materia");
        lblMateria.setMaximumSize(new java.awt.Dimension(412, 47));
        lblMateria.setMinimumSize(new java.awt.Dimension(412, 47));
        lblMateria.setPreferredSize(new java.awt.Dimension(412, 47));
        lblMateria.setVerifyInputWhenFocusTarget(false);

        txtMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMateriaActionPerformed(evt);
            }
        });
        txtMateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMateriaKeyReleased(evt);
            }
        });

        cbHabilitar.setText("Habilitar Modificación");
        cbHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHabilitarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnDarAlta.setText("Dar de alta");
        btnDarAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarAltaActionPerformed(evt);
            }
        });

        btnDarBaja.setText("Dar de baja");
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        tblMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMateriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMateria);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        Labelnombre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Labelnombre.setForeground(new java.awt.Color(255, 255, 255));
        Labelnombre.setText("Nombre");

        LabelDescripcion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LabelDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        LabelDescripcion.setText("Descripción");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cod. Materia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Labelnombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(cbHabilitar)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDarBaja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDarAlta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCodMateria)
                                .addComponent(txtDescripcion)
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(lblMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Labelnombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelDescripcion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addComponent(cbHabilitar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDarAlta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDarBaja)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        JFrame padre = (JFrame) SwingUtilities.getWindowAncestor(this);
        DialogMateria ventanitaAgregar = new DialogMateria(padre, true);
        ventanitaAgregar.setVisible(true);
        refrescarTabla();
        limpiarCampos();
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cbHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHabilitarActionPerformed
        if(cbHabilitar.isSelected()){
            txtNombre.setEnabled(true);
            txtDescripcion.setEnabled(true);
            txtCodMateria.setEnabled(true);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnDarAlta.setEnabled(true);
            btnDarBaja.setEnabled(true);
        }else{
            txtNombre.setEnabled(false);
            txtDescripcion.setEnabled(false);
            txtCodMateria.setEnabled(false);
        }  
    }//GEN-LAST:event_cbHabilitarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
          if (validarCampos()) {
            int fila = tblMateria.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this,
                    "Debe seleccionar una materia",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            int id = Integer.parseInt(tblMateria.getValueAt(fila, 0).toString());

            Materia materia = new Materia();
            materia.setId_materia(id);
            materia.setNombre(txtNombre.getText().trim());
            materia.setDescripcion(txtDescripcion.getText().trim());
            materia.setCodigo_materia(txtCodMateria.getText().trim());
            materia.setEstado(true);

            maniMateria.actualizar(materia);

            JOptionPane.showMessageDialog(this,
                "Materia modificada correctamente",
                "Éxito",
                JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos();
        }
          
         refrescarTabla();
         
          
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
     /*try{
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta seguro de eliminar esta materia?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
            if(confirmar == JOptionPane.YES_OPTION) {
                maniMateria.eliminar(seleccionado);
                JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");
            }
           
            
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "debe seleccionar una materia de la tabla para eliminar");
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al eliminar materia");
            e.printStackTrace();
        }
         refrescarTabla();  
         limpiarCampos();
*/
      int fila = tblMateria.getSelectedRow(); // obtenemos la fila seleccionada
        if (fila == -1) {
        JOptionPane.showMessageDialog(this, 
            "Debe seleccionar una materia de la tabla para eliminar", 
            "Aviso", 
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Obtenemos el ID de la materia desde la columna oculta (0)
    int idMateria = (int) tblMateria.getValueAt(fila, 0);

    int confirmar = JOptionPane.showConfirmDialog(this, 
        "¿Está seguro de eliminar esta materia?", 
        "Confirmar eliminación", 
        JOptionPane.YES_NO_OPTION);

    if (confirmar == JOptionPane.YES_OPTION) {
        try {
            maniMateria.eliminar(idMateria); // llamamos al DAO
            JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");
            refrescarTabla(); // actualizamos la tabla
            limpiarCampos();  // limpiamos los campos
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar la materia");
            e.printStackTrace();
        }
    }

        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnDarAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarAltaActionPerformed
        try{
        
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta seguro de dar de alta esta materia?", "Confirmar alta", JOptionPane.YES_NO_OPTION);
            if(confirmar == JOptionPane.YES_OPTION){
                maniMateria.darAlta(seleccionado);
            }
            refrescarTabla();
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia para dar de alta.");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al dar de alta a la materia.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDarAltaActionPerformed

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        try{
        
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta seguro de dar de baja esta materia?", "Confirmar baja", JOptionPane.YES_NO_OPTION);
            if(confirmar == JOptionPane.YES_OPTION){
                maniMateria.darBaja(seleccionado);
            }
            refrescarTabla();
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia para dar de baja.");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al dar de baja a la materia.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
         
        System.out.println("Se presionó el botón Buscar");
        String consulta = JOptionPane.showInputDialog(this, "Ingrese ID de materia:");
         
        if(consulta != null ){
            
            try {
             int id = Integer.parseInt(consulta.trim());
             System.out.println("ID INGRESADO"+ id);
                Materia materia = maniMateria.buscarPorId(id);
                System.out.println("MATERIA ENCONTRADA"+materia);
                   modelo.setRowCount(0);
                    if(materia != null){
                    modelo.addRow(new Object[]{
                        materia.getId_materia(),
                        materia.getNombre(),
                        materia.getDescripcion(),
                        materia.getCodigo_materia(),
                        materia.isEstado()?"Activo":"Inactivo"
                            
                    });
                }else{
                    JOptionPane.showMessageDialog(this, "No se encontro materia con ID: " + id);
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Debe ingresar un ID numerico valido");
            }
        }
 
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtMateriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMateriaKeyReleased
       /*borrarFilas();
       for(Materia m: maniMateria.listar()){
           if( m.getNombre().startsWith(txtMateria.getText())){
           modelo.addRow(new Object[]{
           m.getNombre(),
           m.getDescripcion(),
           m.getCodigo_materia(),
           m.isEstado(),
           }); 
        }*/ 
    }//GEN-LAST:event_txtMateriaKeyReleased
    
    private void borrarFilas(){
        int f = modelo.getRowCount()-1;
        for(; f>=0; f--){ 
            modelo.removeRow(f);
        }
    }
    
    private void tblMateriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMateriaMouseClicked
       int fila = tblMateria.getSelectedRow();
       if( fila !=-1){
           String nombre = (String) tblMateria.getValueAt(fila, 1);
           String descripcion = (String) tblMateria.getValueAt(fila, 2);
           String codMateria = (String) tblMateria.getValueAt(fila, 3);
           //Boolean estado = (Boolean) tblMateria.getValueAt(fila, 4);
           txtNombre.setText(nombre);
           txtDescripcion.setText(descripcion);
           txtCodMateria.setText(codMateria);
            btnAgregar.setEnabled(false);
          
          }
    }//GEN-LAST:event_tblMateriaMouseClicked

    private void txtMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMateriaActionPerformed
        // TODO add your handling code here:
        borrarFilas();
       for(Materia m: maniMateria.listar()){
           if( m.getNombre().startsWith(txtMateria.getText())){
           modelo.addRow(new Object[]{
            m.getId_materia(),
           m.getNombre(),
           m.getDescripcion(),
           m.getCodigo_materia(),
           m.isEstado(),
           }); 
        } 
    }                             
    }//GEN-LAST:event_txtMateriaActionPerformed

    private void armarCabecera(){
        modelo = new DefaultTableModel(){
            @Override 
            public boolean isCellEditable(int row, int column){
            return false;
            }
        };
        
        modelo.addColumn("id_materia");
       modelo.addColumn("Nombre");
       modelo.addColumn("Descripción");
       modelo.addColumn("Cod. Materia");
       modelo.addColumn("Estado");
       tblMateria.setModel(modelo);
       TableColumnModel columnModel = tblMateria.getColumnModel();
       TableColumn columnaID = columnModel.getColumn(0);
       columnaID.setMinWidth(0);
       columnaID.setMaxWidth(0);
       columnaID.setPreferredWidth(0);
       columnaID.setResizable(false);
       
    }
    
    public void rellenarTabla(JTable tabla){
         modelo = (DefaultTableModel)tabla.getModel();
        List<Materia> listaMaterias = maniMateria.listar();
        for(Materia m : listaMaterias ){
            modelo.addRow(new Object[]{
                m.getId_materia(),
                m.getNombre(),
                m.getDescripcion(),
                m.getCodigo_materia(),
                m.isEstado()});
        }
    }
    
    private void limpiarCampos(){
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtCodMateria.setText("");
        cbHabilitar.setSelected(false);
        habilitarCampos(false);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnDarAlta.setEnabled(false);
        btnDarBaja.setEnabled(false);
        tblMateria.clearSelection();
    }
    
    private void habilitarCampos(boolean habilitar){
        txtNombre.setEnabled(habilitar);
        txtDescripcion.setEnabled(habilitar);
        txtCodMateria.setEnabled(habilitar);
    }
    
    private void setearTextoListener(int fila){
        
    }
    
    /*private void agregarListeneraTabla(JTable tabla){
        tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent evento){
                if(evento.getValueIsAdjusting()){
                    return;
                }
                int filaS = tabla.getSelectedRow();
                if(filaS > -1){
                    seleccionado = (int) tabla.getValueAt(filaS, 0);
                    btnModificar.setEnabled(true);
                }
            }
        });
    }*/
    
    private boolean validarCampos(){
        if(txtNombre.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "El nombre es obligatorio");
            txtNombre.requestFocus();
            return false;
        }
        
        if(txtCodMateria.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "El codigo de materia es obligatorio");
            txtCodMateria.requestFocus();
            return false;
        }
        
        return true;
    }                   
    
    private void refrescarTabla(){
         modelo.setRowCount(0);
         List<Materia> listaMaterias = maniMateria.listar();
        for(Materia m : listaMaterias ){
            modelo.addRow(new Object[]{
                m.getId_materia(),
                m.getNombre(),
                m.getDescripcion(),
                m.getCodigo_materia(),
                m.isEstado()});
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelDescripcion;
    private javax.swing.JLabel Labelnombre;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDarAlta;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox cbHabilitar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMateria;
    private javax.swing.JTable tblMateria;
    private javax.swing.JTextField txtCodMateria;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtMateria;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
