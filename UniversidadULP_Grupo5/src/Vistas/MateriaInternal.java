/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import manipuladoresDAO.MateriaDAO;
import Modelo.Materia;

/**
 *
 * @author Claudia Bonisoni
 */
public class MateriaInternal extends javax.swing.JInternalFrame {

    /**
     * Creates new form MateriaInternal
     */
    private MateriaDAO maniMateria = new MateriaDAO();
    private DefaultTableModel modelo = new DefaultTableModel();
    int seleccionado = -1;
    List<Materia> listaMaterias;

    public MateriaInternal() {
        initComponents();
        armarCabecera();
        btnsFiltrado.add(rbActivas);
        btnsFiltrado.add(rbInactivas);
        btnsFiltrado.add(rbTodas);
        rbTodas.setSelected(true);
        refrescarTabla();
        limpiarCampos();
        
        btnModificar.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnsFiltrado = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblMateria = new javax.swing.JLabel();
        txtMateria = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMateria = new javax.swing.JTable();
        pnlBotones = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnDarAlta = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        cbHabilitar = new javax.swing.JCheckBox();
        pnlTextos = new javax.swing.JPanel();
        Labelnombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        LabelDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodMateria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        rbInactivas = new javax.swing.JRadioButton();
        rbActivas = new javax.swing.JRadioButton();
        rbTodas = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(47, 96, 131));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMateria.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblMateria.setForeground(new java.awt.Color(255, 255, 255));
        lblMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMateria.setText("Gestión de materias ");
        lblMateria.setMaximumSize(new java.awt.Dimension(412, 47));
        lblMateria.setMinimumSize(new java.awt.Dimension(412, 47));
        lblMateria.setPreferredSize(new java.awt.Dimension(412, 47));
        lblMateria.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(lblMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 270, 37));

        txtMateria.setBackground(new java.awt.Color(222, 222, 222));
        txtMateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMateriaKeyReleased(evt);
            }
        });
        jPanel1.add(txtMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 520, -1));

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 560, 75, -1));

        tblMateria.setBackground(new java.awt.Color(222, 222, 222));
        tblMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMateriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMateria);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, 640, 470));

        pnlBotones.setBackground(new java.awt.Color(222, 222, 222));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnDarAlta.setText("Dar de alta");
        btnDarAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarAltaActionPerformed(evt);
            }
        });

        btnDarBaja.setText("Dar de baja");
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        cbHabilitar.setText("Habilitar Modificación");
        cbHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHabilitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDarAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDarBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlBotonesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(cbHabilitar)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(cbHabilitar)
                .addGap(8, 8, 8)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar)
                .addGap(12, 12, 12)
                .addComponent(btnDarAlta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDarBaja)
                .addGap(15, 15, 15))
        );

        jPanel1.add(pnlBotones, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 220, 270));

        pnlTextos.setBackground(new java.awt.Color(222, 222, 222));

        Labelnombre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Labelnombre.setForeground(new java.awt.Color(0, 0, 0));
        Labelnombre.setText("Nombre:");

        LabelDescripcion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        LabelDescripcion.setForeground(new java.awt.Color(0, 0, 0));
        LabelDescripcion.setText("Descripción:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Cod. Materia:");

        javax.swing.GroupLayout pnlTextosLayout = new javax.swing.GroupLayout(pnlTextos);
        pnlTextos.setLayout(pnlTextosLayout);
        pnlTextosLayout.setHorizontalGroup(
            pnlTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTextosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Labelnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                        .addComponent(LabelDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDescripcion))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        pnlTextosLayout.setVerticalGroup(
            pnlTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTextosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Labelnombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(pnlTextos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 220, 210));

        jLabel1.setText("Filtrar por nombre:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, 20));

        rbInactivas.setText("Inactivas");
        rbInactivas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbInactivasActionPerformed(evt);
            }
        });
        jPanel1.add(rbInactivas, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, -1, -1));

        rbActivas.setText("Activas");
        rbActivas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbActivasActionPerformed(evt);
            }
        });
        jPanel1.add(rbActivas, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 20, -1, -1));

        rbTodas.setText("Todas");
        rbTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTodasActionPerformed(evt);
            }
        });
        jPanel1.add(rbTodas, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Filtrar por estado:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, -1, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        JFrame padre = (JFrame) SwingUtilities.getWindowAncestor(this);
        DialogMateria ventanitaAgregar = new DialogMateria(padre, true);
        ventanitaAgregar.setVisible(true);
        refrescarTabla();
        limpiarCampos();

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cbHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHabilitarActionPerformed
        if (cbHabilitar.isSelected()) {
            txtNombre.setEnabled(true);
            txtDescripcion.setEnabled(true);
            txtCodMateria.setEnabled(true);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnDarAlta.setEnabled(true);
            btnDarBaja.setEnabled(true);
        } else {
            txtNombre.setEnabled(false);
            txtDescripcion.setEnabled(false);
            txtCodMateria.setEnabled(false);
        }
    }//GEN-LAST:event_cbHabilitarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int fila = tblMateria.getSelectedRow();
        if (validarCampos()) {
            if (fila == -1) {
                JOptionPane.showMessageDialog(this,
                        "Debe seleccionar una materia",
                        "Aviso",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        int id = (int) tblMateria.getValueAt(fila, 0);
        try {
            Materia materia = new Materia();
            materia.setNombre(txtNombre.getText().trim());
            materia.setDescripcion(txtDescripcion.getText().trim());
            materia.setCodigo_materia(txtCodMateria.getText().trim());
            if (!listaMaterias.contains(materia)) {
                maniMateria.actualizarPorID(id, materia);
                JOptionPane.showMessageDialog(this,
                        "Materia modificada correctamente",
                        "Éxito",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Ya existe una materia con ese codigo.");
            }
            limpiarCampos();
            refrescarTabla();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar materia.");
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tblMateria.getSelectedRow(); // obtenemos la fila seleccionada
        if (fila == -1) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar una materia de la tabla para eliminar",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtenemos el ID de la materia desde la columna oculta (0)
        int idMateria = (int) tblMateria.getValueAt(fila, 0);

        int confirmar = JOptionPane.showConfirmDialog(this,
                "¿Está seguro de eliminar esta materia?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION);

        if (confirmar == JOptionPane.YES_OPTION) {
            try {
                maniMateria.eliminar(idMateria); // llamamos al DAO
                JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");
                refrescarTabla(); // actualizamos la tabla
                limpiarCampos();  // limpiamos los campos
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar la materia");
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnDarAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarAltaActionPerformed
        try {

            int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta seguro de dar de alta esta materia?", "Confirmar alta", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                maniMateria.darAlta(seleccionado);
            }
            refrescarTabla();
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia para dar de alta.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al dar de alta a la materia.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDarAltaActionPerformed

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        try {
            int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta seguro de dar de baja esta materia?", "Confirmar baja", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                maniMateria.darBaja(seleccionado);
            }
            refrescarTabla();
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia para dar de baja.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al dar de baja a la materia.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtMateriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMateriaKeyReleased
        String caracter = txtMateria.getText().trim().toLowerCase();
        DefaultTableModel modelo = (DefaultTableModel) tblMateria.getModel();
        modelo.setRowCount(0);
        for (Materia m : maniMateria.listar()) {
            if (m.getNombre().toLowerCase().startsWith(caracter)) {
                modelo.addRow(new Object[]{
                    m.getId_materia(),
                    m.getNombre(),
                    m.getDescripcion(),
                    m.getCodigo_materia(),
                    VistaLogin.parsearBooleanaString(m.isEstado())
                });
            }
        }
    }//GEN-LAST:event_txtMateriaKeyReleased


    private void tblMateriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMateriaMouseClicked
        int fila = tblMateria.getSelectedRow();
        if (fila != -1) {
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnDarAlta.setEnabled(true);
            btnDarBaja.setEnabled(true);
            seleccionado = (int) tblMateria.getValueAt(fila, 0);
            String nombre = (String) tblMateria.getValueAt(fila, 1);
            String descripcion = (String) tblMateria.getValueAt(fila, 2);
            String codMateria = (String) tblMateria.getValueAt(fila, 3);
            txtNombre.setText(nombre);
            txtDescripcion.setText(descripcion);
            txtCodMateria.setText(codMateria);

        }
    }//GEN-LAST:event_tblMateriaMouseClicked

    private void rbTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTodasActionPerformed
        refrescarTabla();
    }//GEN-LAST:event_rbTodasActionPerformed

    private void rbActivasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbActivasActionPerformed
        refrescarTabla();
    }//GEN-LAST:event_rbActivasActionPerformed

    private void rbInactivasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbInactivasActionPerformed
        refrescarTabla();
    }//GEN-LAST:event_rbInactivasActionPerformed

    private void armarCabecera() {
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        modelo.addColumn("id_materia");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripción");
        modelo.addColumn("Cod. Materia");
        modelo.addColumn("Estado");
        tblMateria.setModel(modelo);
        TableColumnModel columnModel = tblMateria.getColumnModel();
        TableColumn columnaID = columnModel.getColumn(0);
        columnaID.setMinWidth(0);
        columnaID.setMaxWidth(0);
        columnaID.setPreferredWidth(0);
        columnaID.setResizable(false);

    }

    private void limpiarCampos() {
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtCodMateria.setText("");
        cbHabilitar.setSelected(false);
        habilitarCampos(false);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnDarAlta.setEnabled(false);
        btnDarBaja.setEnabled(false);
        tblMateria.clearSelection();
    }

    private void habilitarCampos(boolean habilitar) {
        txtNombre.setEnabled(habilitar);
        txtDescripcion.setEnabled(habilitar);
        txtCodMateria.setEnabled(habilitar);
    }

    private boolean validarCampos() {
        if (txtNombre.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre es obligatorio");
            txtNombre.requestFocus();
            return false;
        }

        if (txtCodMateria.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El codigo de materia es obligatorio");
            txtCodMateria.requestFocus();
            return false;
        }

        return true;
    }

    private void refrescarTabla() {
        listaMaterias = maniMateria.listar();
        modelo.setRowCount(0);
        List<Materia> listaFiltrada = new ArrayList<>();
        for(Materia m : listaMaterias){
            if(rbTodas.isSelected()){
                listaFiltrada.add(m);
            } else if(rbActivas.isSelected() && m.isEstado()){
                listaFiltrada.add(m);
            } else if (rbInactivas.isSelected() && !m.isEstado()){
                listaFiltrada.add(m);
            }
        }
        for (Materia m : listaFiltrada) {
            modelo.addRow(new Object[]{
                m.getId_materia(),
                m.getNombre(),
                m.getDescripcion(),
                m.getCodigo_materia(),
                VistaLogin.parsearBooleanaString(m.isEstado())});
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelDescripcion;
    private javax.swing.JLabel Labelnombre;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDarAlta;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup btnsFiltrado;
    private javax.swing.JCheckBox cbHabilitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMateria;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlTextos;
    private javax.swing.JRadioButton rbActivas;
    private javax.swing.JRadioButton rbInactivas;
    private javax.swing.JRadioButton rbTodas;
    private javax.swing.JTable tblMateria;
    private javax.swing.JTextField txtCodMateria;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtMateria;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
