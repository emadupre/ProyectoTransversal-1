/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import manipuladoresDAO.InscripcionDAO;
import manipuladoresDAO.MateriaDAO;
import Modelo.Alumno;
import Modelo.Inscripcion;
import Modelo.Materia;
import java.util.ArrayList;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JTextField;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Enzo_2
 */
public class InscripcionInternal extends javax.swing.JInternalFrame {

    private MateriaDAO maniMat = new MateriaDAO();
    private InscripcionDAO maniIns = new InscripcionDAO();
    private int seleccionMat = -1;
    private int seleccionIns = -1;
    List<Inscripcion> listaInscripciones;
    private Alumno alumno;

    public InscripcionInternal(Alumno alumno) {
        this.alumno = alumno;
        initComponents();
        rellenarCabeceraMateriasDisponibles(tblMaterias);
        rellenarCabeceraInscripciones(tblInscripciones);
        rellenarTablaMaterias(tblMaterias);
        rellenarTablaInscripciones(tblInscripciones);
        agregarActionListenerAtablaMaterias(tblMaterias);
        agregarActionListenerAtablaInscripciones(tblInscripciones);
        btnInscribirse.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInscripcionMaterias = new javax.swing.JLabel();
        lblSelMateria = new javax.swing.JLabel();
        btnInscribirse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInscripciones = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        lblOfertaMaterias = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMaterias = new javax.swing.JTable();
        lblMisInscripciones = new javax.swing.JLabel();
        lblSelInscrip = new javax.swing.JLabel();
        lblMateriaSel = new javax.swing.JLabel();
        txtMateriaS = new javax.swing.JTextField();
        txtCodigoMateriaS = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblCodMateria = new javax.swing.JLabel();
        btnBaja = new javax.swing.JButton();
        jSeparador = new javax.swing.JSeparator();
        checkEdicion = new javax.swing.JCheckBox();
        btnEliminar = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        lblInscripSel = new javax.swing.JLabel();
        txtFechaS = new javax.swing.JTextField();
        txtInscripcionS = new javax.swing.JTextField();
        lblMateria = new javax.swing.JLabel();
        lblFechaInscrip = new javax.swing.JLabel();
        txtDescripcionS = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblInscripcionMaterias.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lblInscripcionMaterias.setForeground(new java.awt.Color(255, 255, 255));
        lblInscripcionMaterias.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInscripcionMaterias.setText("INSCRIPCION DE MATERIAS");
        getContentPane().add(lblInscripcionMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 970, 20));

        lblSelMateria.setFont(new java.awt.Font("Roboto", 2, 14)); // NOI18N
        lblSelMateria.setForeground(new java.awt.Color(255, 255, 255));
        lblSelMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelMateria.setText("Seleccione la materia a la cual desea inscribirse");
        getContentPane().add(lblSelMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 420, -1));

        btnInscribirse.setBackground(new java.awt.Color(47, 96, 131));
        btnInscribirse.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnInscribirse.setForeground(new java.awt.Color(255, 255, 255));
        btnInscribirse.setText("Agregar inscripción");
        btnInscribirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscribirseActionPerformed(evt);
            }
        });
        getContentPane().add(btnInscribirse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 150, -1));

        tblInscripciones.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        tblInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblInscripciones);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 470, 290));

        btnSalir.setBackground(new java.awt.Color(47, 96, 131));
        btnSalir.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 570, 100, -1));

        lblOfertaMaterias.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblOfertaMaterias.setForeground(new java.awt.Color(255, 255, 255));
        lblOfertaMaterias.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOfertaMaterias.setText("Oferta de materias");
        getContentPane().add(lblOfertaMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 420, -1));

        tblMaterias.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        tblMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblMaterias);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 430, 290));

        lblMisInscripciones.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lblMisInscripciones.setForeground(new java.awt.Color(255, 255, 255));
        lblMisInscripciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMisInscripciones.setText("Mis Inscripciones");
        getContentPane().add(lblMisInscripciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 470, -1));

        lblSelInscrip.setFont(new java.awt.Font("Roboto", 2, 14)); // NOI18N
        lblSelInscrip.setForeground(new java.awt.Color(255, 255, 255));
        lblSelInscrip.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelInscrip.setText("Seleccione una inscripción que quiera modificar");
        getContentPane().add(lblSelInscrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 470, -1));

        lblMateriaSel.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblMateriaSel.setForeground(new java.awt.Color(255, 255, 255));
        lblMateriaSel.setText("Materia seleccionada:");
        getContentPane().add(lblMateriaSel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        txtMateriaS.setEditable(false);
        txtMateriaS.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        txtMateriaS.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtMateriaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 150, -1));

        txtCodigoMateriaS.setEditable(false);
        txtCodigoMateriaS.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        txtCodigoMateriaS.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtCodigoMateriaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 80, -1));

        lblNombre.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombre.setText("Nombre:");
        getContentPane().add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, 20));

        lblCodMateria.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblCodMateria.setForeground(new java.awt.Color(255, 255, 255));
        lblCodMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCodMateria.setText("Cod. materia:");
        getContentPane().add(lblCodMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, -1, 20));

        btnBaja.setBackground(new java.awt.Color(47, 96, 131));
        btnBaja.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnBaja.setForeground(new java.awt.Color(255, 255, 255));
        btnBaja.setText("Dar de Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 440, -1, -1));

        jSeparador.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparador, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 10, 540));

        checkEdicion.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        checkEdicion.setForeground(new java.awt.Color(255, 255, 255));
        checkEdicion.setText("Hablitar modificación de inscripciones");
        getContentPane().add(checkEdicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(47, 96, 131));
        btnEliminar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));

        btnAlta.setBackground(new java.awt.Color(47, 96, 131));
        btnAlta.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnAlta.setForeground(new java.awt.Color(255, 255, 255));
        btnAlta.setText("Dar de Alta");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, -1, -1));

        lblInscripSel.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblInscripSel.setForeground(new java.awt.Color(255, 255, 255));
        lblInscripSel.setText("Inscripción seleccionada:");
        getContentPane().add(lblInscripSel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, -1, -1));

        txtFechaS.setEditable(false);
        txtFechaS.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        txtFechaS.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtFechaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 540, 130, 30));

        txtInscripcionS.setEditable(false);
        txtInscripcionS.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        txtInscripcionS.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtInscripcionS, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 510, 270, -1));

        lblMateria.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblMateria.setForeground(new java.awt.Color(255, 255, 255));
        lblMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMateria.setText("Materia:");
        getContentPane().add(lblMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 510, -1, 20));

        lblFechaInscrip.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        lblFechaInscrip.setForeground(new java.awt.Color(255, 255, 255));
        lblFechaInscrip.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaInscrip.setText("Fecha inscripción:");
        getContentPane().add(lblFechaInscrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 550, -1, 20));

        txtDescripcionS.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDescripcionS, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 320, 70));

        jPanel1.setBackground(new java.awt.Color(47, 91, 131));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscribirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscribirseActionPerformed
        Inscripcion inscrip = null;
        int seleccion = JOptionPane.showConfirmDialog(this, "¿Esta seguro que deseas inscribirte a la materia seleccionada?", "CONFIRMACION", YES_NO_OPTION);
        if (seleccion == 0) {
            try {
                inscrip = new Inscripcion(alumno.getId_alumno(), seleccionMat, true);
                maniIns.agregar(inscrip);
                rellenarTablaMaterias(tblMaterias);
                rellenarTablaInscripciones(tblInscripciones);
                tblMaterias.clearSelection();
                JOptionPane.showMessageDialog(this, "inscripcion realizada con exito ");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "error al eliminar una materia ");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnInscribirseActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int seleccion = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar la inscripción seleccionada?", "CONFIRMACION", YES_NO_OPTION);
        if (seleccion == 0) {
            try {
                maniIns.eliminar(seleccionIns);
                JOptionPane.showMessageDialog(this, "Inscripción eliminada con exito.");
                rellenarTablaMaterias(tblMaterias);
                rellenarTablaInscripciones(tblInscripciones);
                tblInscripciones.clearSelection();
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Seleccione una inscripción a eliminar.");
            } catch (Exception a) {
                JOptionPane.showMessageDialog(this, "Error al eliminar inscripción");
            }

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        try {
            int seleccion = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea darse de alta inscripción seleccionada?", "CONFIRMACION", YES_NO_OPTION);
            if (seleccion == 0) {
                maniIns.darseAlta(seleccionIns);
                rellenarTablaMaterias(tblMaterias);
                rellenarTablaInscripciones(tblInscripciones);
                tblInscripciones.clearSelection();
            }

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Seleccione una inscripción a dar de alta.");
        } catch (Exception a) {
            JOptionPane.showMessageDialog(this, "Error al dar de alta inscripción");
        }
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        try {
            int seleccion = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea darse de baja inscripción seleccionada?", "CONFIRMACION", YES_NO_OPTION);
            if (seleccion == 0) {
                maniIns.darseBaja(seleccionIns);
                rellenarTablaMaterias(tblMaterias);
                rellenarTablaInscripciones(tblInscripciones);
                tblInscripciones.clearSelection();
            }

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Seleccione una inscripción a dar de baja.");
        } catch (Exception a) {
            JOptionPane.showMessageDialog(this, "Error al dar de baja inscripción");
        }
    }//GEN-LAST:event_btnBajaActionPerformed
    private void rellenarCabeceraInscripciones(JTable tabla) {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int a, int b) {
                return false;
            }

        };
        model.addColumn("id_inscripcion");
        model.addColumn("Nombre materia");
        model.addColumn("Fecha inscripción");
        model.addColumn("Estado inscripción");
        tabla.setModel(model);
        TableColumnModel modeloColm = tabla.getColumnModel();
        TableColumn column0 = modeloColm.getColumn(0);
        column0.setMinWidth(0);
        column0.setMaxWidth(0);
        column0.setPreferredWidth(0);
        column0.setResizable(false);
    }

    private void rellenarCabeceraMateriasDisponibles(JTable tabla) {

        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int a, int b) {
                return false;
            }

        };
        model.addColumn("id_materia");
        model.addColumn("Nombre");
        model.addColumn("Descripcion");
        model.addColumn("Codigo materia");
        tabla.setModel(model);
        TableColumnModel modeloColm = tabla.getColumnModel();
        TableColumn column0 = modeloColm.getColumn(0);
        column0.setMinWidth(0);
        column0.setMaxWidth(0);
        column0.setPreferredWidth(0);
        column0.setResizable(false);
    }

    private void rellenarTablaMaterias(JTable tabla) {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        listaInscripciones = maniIns.listarInscripcionesPorAlumno(alumno.getId_alumno());
        modelo.setRowCount(0);
        List<Materia> listaMateriasFiltrada = new ArrayList<>();
        try {
            List<Materia> listarMaterias = maniMat.listar();
            for (Inscripcion i : listaInscripciones) {
                for (Materia m : listarMaterias) {
                    if (i.getId_materia() != m.getId_materia() && m.isEstado() && !listaMateriasFiltrada.contains(m)) {
                        listaMateriasFiltrada.add(m);
                    } 
                }
            }
            if(listaMateriasFiltrada.isEmpty()){
                listaMateriasFiltrada = maniMat.listar();
            }
            for (Materia m : listaMateriasFiltrada) {
                modelo.addRow(new Object[]{m.getId_materia(), m.getNombre(),
                    m.getDescripcion(),
                    m.getCodigo_materia()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(tabla, "error al cargar las materias");
        }
    }

    private void rellenarTablaInscripciones(JTable tabla) {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        List<Materia> listaMaterias = maniMat.listar();
        ArrayList<Inscripcion> listaInscripcionesFiltrada = new ArrayList<>();
        for (Materia m : listaMaterias) {
            for (Inscripcion i : listaInscripciones) {
                if (i.getId_materia() == m.getId_materia() && !listaInscripcionesFiltrada.contains(i)) {
                    listaInscripcionesFiltrada.add(i);
                    modelo.addRow(new Object[]{i.getId_inscripcion(), m.getNombre(),
                        i.getFechaIns().toString(),
                        VistaLogin.parsearBooleanaString(i.isEstado())
                    });
                }
            }
        }
    }

    private void agregarActionListenerAtablaInscripciones(JTable tabla) {
        tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent eventos) {
                if (eventos.getValueIsAdjusting()) {
                    return;
                }
                int filaS = tabla.getSelectedRow();
                JTextField[] campos = {txtInscripcionS, txtFechaS};
                if (filaS > -1) {
                    seleccionIns = (int) tabla.getValueAt(filaS, 0);
                    String[] textos = {
                        (String) tabla.getValueAt(filaS, 1),
                        (String) tabla.getValueAt(filaS, 2),};
                    setearTexto(campos, textos);
                    btnEliminar.setEnabled(true);
                    btnAlta.setEnabled(true);
                    btnBaja.setEnabled(true);
                } else {
                    limpiarCamposMateriaS(campos);
                    btnEliminar.setEnabled(false);
                    btnAlta.setEnabled(false);
                    btnBaja.setEnabled(false);
                }
            }
        });
    }

    private void agregarActionListenerAtablaMaterias(JTable tabla) {
        tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent eventos) {
                if (eventos.getValueIsAdjusting()) {
                    return;
                }
                int filaS = tabla.getSelectedRow();
                JTextField[] campos = {txtMateriaS, txtCodigoMateriaS, txtDescripcionS};
                if (filaS > - 1) {
                    seleccionMat = (int) tabla.getValueAt(filaS, 0);
                    String[] textos = {
                        (String) tabla.getValueAt(filaS, 1),
                        (String) tabla.getValueAt(filaS, 3),
                        (String) tabla.getValueAt(filaS, 2)
                    };
                    setearTexto(campos, textos);
                    btnInscribirse.setEnabled(true);
                } else {
                    limpiarCamposMateriaS(campos);
                    btnInscribirse.setEnabled(false);
                }
            }

        });
    }

    private void setearTexto(JTextField[] campos, String[] nuevoTexto) {
        for (int i = 0; i < campos.length; i++) {
            JTextField text = campos[i];
            String nuevo = nuevoTexto[i];
            text.setText(nuevo);
        }
    }

    private void limpiarCamposMateriaS(JTextField[] campos) {
        for (int i = 0; i < campos.length; i++) {
            JTextField text = campos[i];
            text.setText("");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInscribirse;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox checkEdicion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparador;
    private javax.swing.JLabel lblCodMateria;
    private javax.swing.JLabel lblFechaInscrip;
    private javax.swing.JLabel lblInscripSel;
    private javax.swing.JLabel lblInscripcionMaterias;
    private javax.swing.JLabel lblMateria;
    private javax.swing.JLabel lblMateriaSel;
    private javax.swing.JLabel lblMisInscripciones;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblOfertaMaterias;
    private javax.swing.JLabel lblSelInscrip;
    private javax.swing.JLabel lblSelMateria;
    private javax.swing.JTable tblInscripciones;
    private javax.swing.JTable tblMaterias;
    private javax.swing.JTextField txtCodigoMateriaS;
    private javax.swing.JTextField txtDescripcionS;
    private javax.swing.JTextField txtFechaS;
    private javax.swing.JTextField txtInscripcionS;
    private javax.swing.JTextField txtMateriaS;
    // End of variables declaration//GEN-END:variables

}
